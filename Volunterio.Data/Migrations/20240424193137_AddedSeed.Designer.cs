// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Volunterio.Data.Context;

#nullable disable

namespace Volunterio.Data.Migrations
{
    [DbContext(typeof(VolunterioContext))]
    [Migration("20240424193137_AddedSeed")]
    partial class AddedSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Volunterio.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("CanCreateRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanDeleteRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanDeleteUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanEditRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanEditUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanInviteUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanMaintainSystem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanRestoreUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanSeeAllRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanSeeAllUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanSeeRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CanSeeUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now() at time zone('utc')");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsHidden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CanCreateRoles = true,
                            CanDeleteRoles = true,
                            CanDeleteUsers = true,
                            CanEditRoles = true,
                            CanEditUsers = true,
                            CanInviteUsers = true,
                            CanMaintainSystem = true,
                            CanRestoreUsers = true,
                            CanSeeAllRoles = true,
                            CanSeeAllUsers = true,
                            CanSeeRoles = true,
                            CanSeeUsers = true,
                            CreatedAt = new DateTime(2022, 11, 11, 1, 6, 0, 0, DateTimeKind.Utc),
                            IsHidden = true,
                            Name = "Admin",
                            Type = "Admin"
                        },
                        new
                        {
                            Id = new Guid("a0a80c03-abbc-eb11-cabb-0022480a1c0a"),
                            CanCreateRoles = false,
                            CanDeleteRoles = false,
                            CanDeleteUsers = false,
                            CanEditRoles = false,
                            CanEditUsers = false,
                            CanInviteUsers = false,
                            CanMaintainSystem = false,
                            CanRestoreUsers = false,
                            CanSeeAllRoles = false,
                            CanSeeAllUsers = false,
                            CanSeeRoles = false,
                            CanSeeUsers = false,
                            CreatedAt = new DateTime(2022, 11, 11, 1, 6, 0, 0, DateTimeKind.Utc),
                            IsHidden = true,
                            Name = "User",
                            Type = "User"
                        },
                        new
                        {
                            Id = new Guid("fc1b77aa-0814-4589-80c2-a8090da02163"),
                            CanCreateRoles = false,
                            CanDeleteRoles = false,
                            CanDeleteUsers = false,
                            CanEditRoles = false,
                            CanEditUsers = false,
                            CanInviteUsers = false,
                            CanMaintainSystem = false,
                            CanRestoreUsers = false,
                            CanSeeAllRoles = false,
                            CanSeeAllUsers = false,
                            CanSeeRoles = false,
                            CanSeeUsers = false,
                            CreatedAt = new DateTime(2022, 11, 11, 1, 6, 0, 0, DateTimeKind.Utc),
                            IsHidden = true,
                            Name = "Helper",
                            Type = "Helper"
                        });
                });

            modelBuilder.Entity("Volunterio.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now() at time zone('utc')");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("RefreshTokenExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("RegistrationToken")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("VerificationCode")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00a68a21-7b01-2211-abbc-0022480a1c03"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "roma.dan2001@gmail.com",
                            FirstName = "Roman",
                            LastName = "Danylevych",
                            PasswordHash = "2576c639ea2309626fee6232e624ba921afada44537b9fa6592f03d5a1da7dd375fbd17b2af56655323327e8fd75a46d4932d54c4df61595844bc95fd5979c56",
                            RoleId = new Guid("a0a80c03-abbc-eb11-cabb-0022480a1c0a"),
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("6ebd3c1c-4a07-4c53-8a71-493386f28261"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nazariy.chetvertukha@gmail.com",
                            FirstName = "Nazariy",
                            LastName = "Chetvertukha",
                            PasswordHash = "2576c639ea2309626fee6232e624ba921afada44537b9fa6592f03d5a1da7dd375fbd17b2af56655323327e8fd75a46d4932d54c4df61595844bc95fd5979c56",
                            RoleId = new Guid("fc1b77aa-0814-4589-80c2-a8090da02163"),
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("bafee45c-1874-4c40-b781-5221133b4c30"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "annstepaniuk12@gmail.com",
                            FirstName = "Ann",
                            LastName = "Stepaniuk",
                            PasswordHash = "2576c639ea2309626fee6232e624ba921afada44537b9fa6592f03d5a1da7dd375fbd17b2af56655323327e8fd75a46d4932d54c4df61595844bc95fd5979c56",
                            RoleId = new Guid("fc1b77aa-0814-4589-80c2-a8090da02163"),
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("e823f508-ce4e-498f-a401-dbf40c892dbb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "roman.sadokha01@gmail.com",
                            FirstName = "Roman",
                            LastName = "Sadokha",
                            PasswordHash = "2576c639ea2309626fee6232e624ba921afada44537b9fa6592f03d5a1da7dd375fbd17b2af56655323327e8fd75a46d4932d54c4df61595844bc95fd5979c56",
                            RoleId = new Guid("a0a80c03-abbc-eb11-cabb-0022480a1c0a"),
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Volunterio.Data.Entities.User", b =>
                {
                    b.HasOne("Volunterio.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Volunterio.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
